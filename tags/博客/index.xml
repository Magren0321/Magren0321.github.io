<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>博客 on Magren&#39;s Blog</title>
    <link>https://magren.cn/tags/%E5%8D%9A%E5%AE%A2/</link>
    <description>Recent content in 博客 on Magren&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 03 Apr 2021 22:14:21 +0800</lastBuildDate><atom:link href="https://magren.cn/tags/%E5%8D%9A%E5%AE%A2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>将博客变成PWA</title>
      <link>https://magren.cn/%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%8F%98%E6%88%90pwa/</link>
      <pubDate>Sat, 03 Apr 2021 22:14:21 +0800</pubDate>
      
      <guid>https://magren.cn/%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%8F%98%E6%88%90pwa/</guid>
      <description>我是少数派的一个读者，成为少数派已经419天。
从少数派里面学到了很多东西，也丰富了自己的眼界，所以少数派APP也是我手机上的常用应用之一，在去年将手机换成了Android后，发现到现在为止Android的APP已经很久没有更新过了，Android客户端一直处于一个“年久失修”的状态，反倒是IOS的一直在更新迭代，更新了UI以及一些新的功能，这让我十分眼红。
但是在少数派3月31号发布的文章中，他们为Android客户端做出了一个解释，并且提出了一个更优解。
 继去年少数派网站改版升级后，更符合新版设计的少数派 iOS 客户端 2.0 也在不久前正式上线。可惜由于开发能力实在有限，Android 平台繁杂的机型适配和兼容性问题也着实令人头疼，少数派的 Android 客户端此前一直处于「年久失修」的状态。
好在少数派最终为 Android 客户端找到了一个「更优解」——渐进式网页应用（以下简称 PWA）。在保证内容呈现完整的前提下，PWA 有着比客户端应用更轻量、比网页版功能更强大的全新体验，同时还能兼容 Android、iOS 甚至 Windows 等多个平台。
 关于PWA这个概念我是第一次知道，抱着新奇的态度开始Google……
关于PWA PWA 是 Google 于 2016 年提出的概念，于 2017 年正式落地，于 2018 年迎来重大突破，全球顶级的浏览器厂商，Google、Microsoft、Apple 已经全数宣布支持 PWA 技术。
PWA 全称为 Progressive Web App，中文译为渐进式 Web APP，其目的是通过各种 Web 技术实现与原生 App 相近的用户体验。
纵观现有 Web 应用与原生应用的对比差距，如离线缓存、沉浸式体验等等，可以通过已经实现的 Web 技术去弥补这些差距，最终达到与原生应用相近的用户体验效果。
好吧说完上面的官方发言，地道一点说下我自己的体验，就是一个Web页面拿掉了浏览器的壳子，以一个近似app的形式存在手机桌面，与一般的将网页添加到桌面不同，它还有本地通知的能力以及一个缓存的能力，除此以外它可以兼容Android、IOS以及Windows多个平台，对我来说它在打开的时候还有一个页面logo闪屏，很有吸引力。
将自己的博客变成PWA 在体验过少数派的PWA后，我萌生了能否把自己的博客变成PWA的想法，在网上查询了资料后发现入门意外的简单，接下来说说我自己的操作。
添加 manifest.json 这里新建一个manifest.json文件，主要是配置应用图标以及名称等信息，然后这里分享下我的配置，具体的配置介绍可以参考下MDN。
{ &amp;#34;dir&amp;#34;: &amp;#34;ltr&amp;#34;, //指定名称、短名称和描述成员的主文本方向  &amp;#34;lang&amp;#34;: &amp;#34;zh-cn&amp;#34;, //语言  &amp;#34;name&amp;#34;: &amp;#34;Magren&amp;#39;s Blog&amp;#34;, //名字  &amp;#34;short_name&amp;#34;: &amp;#34;Magren&amp;#39;s Blog&amp;#34;, //短名称  &amp;#34;theme_color&amp;#34;: &amp;#34;#ffffff&amp;#34;, //主题颜色  &amp;#34;background_color&amp;#34;: &amp;#34;#d4d4d4&amp;#34;, //启动时闪屏的背景颜色  &amp;#34;display&amp;#34;: &amp;#34;standalone&amp;#34;, //定义开发人员对Web应用程序的首选显示模式。  &amp;#34;start_url&amp;#34;: &amp;#34;.</description>
    </item>
    
    <item>
      <title>博客迁移至Hugo</title>
      <link>https://magren.cn/%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%87%B3hugo/</link>
      <pubDate>Fri, 08 Jan 2021 14:54:21 +0800</pubDate>
      
      <guid>https://magren.cn/%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%87%B3hugo/</guid>
      <description>先说说为啥要迁移 在这之前用的是hexo + next主题，然后自己心血来潮加了网易云的外链还有live 2d，tag cloud这些东西，也有人说过挺好看的，但是自己看多了就觉得有点花里胡哨，而且当我在网上查阅东西进到别人博客的时候，看到的基本都是hexo + next……有点审美疲劳。
但也很容易理解，hexo比较容易上手而且比较稳定，有着功能齐全并且成熟的主题（说的就是Next），这个时候我的眼光放到了hugo上。
Hugo 依靠Go语言进行开发，并且号称世界上最快的构建网站工具，究竟有多快我也不知道，但是我用hexo生成静态网页的时候还需要等，用hugo就没有等过，给我的感觉就是我敲完命令回车的那一刻他就好了……
另一方面就是hugo支持热加载，在文件修改的内容支持实时地显示在网页上，比起hexo需要点多下刷新来说，还是比较方便的。
hugo虽然有着上述说的优点，但是hugo在知名度上不及hexo，教程还有资料，以及优化配置这些方面在网上相比hexo来说都是比较少的，所以有些东西还得自己慢慢摸索。
搭建 环境   Git
  由于hugo依靠go语言，所以还得装Go
  接着装hugo
hugo 解压完后只需要将其添加到环境变量中即可。
  生成博客 hugo 安装完后可以用命令行运行 hugo new site &amp;lsquo;博客名字&amp;rsquo; ，这样hugo会生成一个用于存放博客的文件夹，里面一般有：
 archetypes/ content/ data/ themes/ layouts/ static/ config.toml  一般的配置信息写在 config.toml里面，文章以及一些页面在content里面，archetypes 里面一般放的是使用 hugo new 生成页面的时候头部配置信息格式。themes里面放的是你需要的主题。
主题安装 跟hexo不同，hugo没有自带的主题，所以这个时候运行hugo serve来浏览的时候是一片空白的，所以这个时候我们得去hugo官网主题库里去找喜欢的主题。
同时按照主题给的文档在config.toml里面进行配置，一般下载下来的主题文件夹里有一个exampleSite的文件夹，那是作者的配置示例，如果不知道配置什么的话可以复制作者的示例，然后自行修改即可。
生成博文 使用hugo new posts/xxxx.md 命令，可以使content/posts文件夹中生成你需要的 markdown 文件，用markdown语法编辑即可。
还有要注意的就是新生成的文件上方与hexo不同的是多了一条 draft属性，这是表示是否是草稿，假如是true的话该文件不会渲染成页面，更不会在博客中显示，删掉或者改成false便会渲染了。
添加tag和categories的方法跟hexo是一样的。
生成页面 特别的页面（archives页面等）可以使用 hugo new page/xxx.md生成，例如about页面就 hugo new page/about.</description>
    </item>
    
  </channel>
</rss>
